/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectomeia;

import static proyectomeia.DatosMateriales.Indice;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author carlo
 */
public class EncontrarDonacion extends javax.swing.JFrame {

     public EncontrarDonacion() {
        initComponents();
        String linealeida1="";
        ArrayList<String> Opciones = new ArrayList<String>();
        try { //Se busca al usuario ingresado en el archivo de texto
                FileReader BitacoraMateriales = new FileReader("C:/MEIA/Materiales/bitacora_Material.txt");
                BufferedReader MaterialesBitacora = new BufferedReader(BitacoraMateriales);
                while (((linealeida1 = MaterialesBitacora.readLine()) != null)) 
                {   
                    String [] ExtraerMaterial = linealeida1.split("\\|");
                    Opciones.add(ExtraerMaterial[0]);
                }
                MaterialesBitacora.close();
                BitacoraMateriales.close();
                FileReader Materiales = new FileReader("C:/MEIA/Materiales/Material.txt");
                BufferedReader Materialestxt = new BufferedReader(Materiales);
                while (((linealeida1 = Materialestxt.readLine()) != null)) 
                {   
                    String [] ExtraerMaterial = linealeida1.split("\\|");
                    Opciones.add(ExtraerMaterial[0]);
                }
                Materialestxt.close();
                Materiales.close();
                
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        for(String mat : Opciones)
        {
            this.cbMaterial.addItem(mat);
        }
    }

    /**
     * Creates new form EncontrarDonacion
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbMaterial = new javax.swing.JComboBox<>();
        tfDia = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfUsuario = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        cbMes = new javax.swing.JTextField();
        cbYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbMaterial.setBorder(new javax.swing.border.MatteBorder(null));
        cbMaterial.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("Buscar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario que Realizo Donacion:");

        jLabel2.setText("Material:");

        jLabel3.setText("Fecha:");

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Dia");

        jLabel5.setText("Mes");

        jLabel6.setText("AÃ±o");

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        jLabel7.setText("Busqueda Donaciones:");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectomeia/green file.jpg"))); // NOI18N

        jLabel9.setText("Ejemplo: 7/NOVEMBER/2019");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(jLabel4))
                                            .addComponent(tfDia, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 69, Short.MAX_VALUE)
                                                .addComponent(jLabel9)
                                                .addGap(167, 167, 167)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel8)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel7)
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        String usuario = tfUsuario.getText();
        String material = cbMaterial.getSelectedItem().toString();
        String fecha = tfDia.getText() + "/" + cbMes.getText() + "/" + cbYear.getText();
        busqueda(usuario,material,fecha);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        Eliminar();
        EliminarDelindice();
        ActualizarDescriptores();
        DescriptorIndex();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        OpcionesAdministrador registro = new OpcionesAdministrador();
                        registro.setVisible(true);
                        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
 



 public void ActualizarDescriptores()
    {
        int Bloque = 1;
        int registros = 0;
        String inicioDesc = "C:\\MEIA\\Donaciones\\DonacionDescriptor_";
        String inicioFile = "C:\\MEIA\\Donaciones\\Donacion_";
        String ext = ".txt";
        String rutaDesc = inicioDesc+Bloque+ext;
        String rutaFile = inicioFile+Bloque+ext;
        File fD = new File(rutaDesc);
        File fF = new File(rutaFile);
        FileReader filefr = null;
        BufferedReader filebr = null;
        FileWriter descfw = null;
        BufferedWriter descbw = null;
        String lineaFile = "";
        String adminuser = "";
        while(fF.exists()){
            try {
                filefr = new FileReader(rutaFile);
                filebr = new BufferedReader(filefr);
                lineaFile = filebr.readLine();
                while(lineaFile!=null){
                    registros++;
                    lineaFile = filebr.readLine();
                }
                filefr.close();
                filebr.close();
                if (fD.exists()) {
                    fD.delete();
                }
                fD.createNewFile();
                descfw = new FileWriter(rutaDesc);
                descbw = new BufferedWriter(descfw);
                String nombreArchivo = "Nombre del archivo:Donacion_"+Bloque+ext;
                String usuarioCreador = "Usuario creador:";
                File usuarios = new File("C:\\MEIA\\usuario.txt");
                if (usuarios.exists()) {
                    FileReader usuariofr = new FileReader(usuarios);
                    BufferedReader usuariosbr = new BufferedReader(usuariofr);
                    String tempUser = usuariosbr.readLine();
                    if (tempUser!=null){
                        usuarioCreador += tempUser.split("\\|")[0];
                    }else{
                        File bitacora = new File("C:\\MEIA\\bitacora_usuario.txt");
                        if (bitacora.exists()){
                            FileReader bitacorafr = new FileReader(bitacora);
                            BufferedReader bitacorabr = new BufferedReader(bitacorafr);
                            tempUser = bitacorabr.readLine();
                            if (tempUser!=null){
                            usuarioCreador += tempUser.split("\\|")[0];
                            }
                            bitacorabr.close();
                        }
                    }
                    usuariofr.close();
                    usuariosbr.close();
                }
                Date fdate = new Date();
                String fecha = "Fecha de creacion:"+ fdate.getDay() +"/"+ fdate.getMonth() +"/2019";
                String cantidadregistros = "Cantidad de registros:" + registros;
                String cantidadregistrosactivos = "Cantidad de registros activos:" + registros;
                String cantidadregistrosinactivos = "Cantidad de registros inactivos:" + 0;
                String maxporbloquedato = "Maximos por bloque:" + 3;
                descbw.write(nombreArchivo);
                descbw.newLine();
                descbw.write(usuarioCreador);
                descbw.newLine();
                descbw.write(fecha);
                descbw.newLine();
                descbw.write(cantidadregistros);
                descbw.newLine();
                descbw.write(cantidadregistrosactivos);
                descbw.newLine();
                descbw.write(cantidadregistrosinactivos);
                descbw.newLine();
                descbw.write(maxporbloquedato);
                descbw.newLine();
                //descfw.close();
                descbw.close();
            } catch (IOException ex) {
                Logger.getLogger(IngresarDonacion.class.getName()).log(Level.SEVERE, null, ex);
            }
            Bloque++;
            registros = 0;
            rutaDesc = inicioDesc+Bloque+ext;
            rutaFile = inicioFile+Bloque+ext;
            fD = new File(rutaDesc);
            fF = new File(rutaFile);
        }
    }
    public String Buscar(String usuario, String material, String fecha)
    {
        String RS = null;
        String key = usuario + "," + material + "," + fecha;
        File index = new File("C:\\MEIA\\Donaciones\\DonacionIndex.txt");
        if (index.exists()){
            try {
                FileReader indexfr = new FileReader(index);
                BufferedReader indexbr = new BufferedReader(indexfr);
                String linea = indexbr.readLine();
                String llaveLeida = "";
                while (linea!=null){
                    llaveLeida = linea.split("\\,")[0] + "," + linea.split("\\,")[1] + "," + linea.split("\\,")[2];
                    if (llaveLeida.equals(key)){
                        RS = linea.split("\\,")[3];
                        linea = null;
                    }else{
                        linea = indexbr.readLine();
                    }
                }
                indexfr.close();
                indexbr.close();
            } catch (IOException ex) {
                Logger.getLogger(OpcionesAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return RS;
    }
    public void DescriptorIndex()
    {
        File index = new File("C:\\MEIA\\Donaciones\\DonacionIndex.txt");
        File Descriptor = new File("C:\\MEIA\\Donaciones\\DonacionIndexDesc.txt");
        if (index.exists()){
            try {
                if (Descriptor.exists()){
                    Descriptor.delete();
                }
                Descriptor.createNewFile();
                FileWriter descifw = new FileWriter(Descriptor);
                BufferedWriter descibw = new BufferedWriter(descifw);
                String usuarioCreador = "Usuario creador:";
                File usuarios = new File("C:\\MEIA\\usuario.txt");
                if (usuarios.exists()) {
                    FileReader usuariofr = new FileReader(usuarios);
                    BufferedReader usuariosbr = new BufferedReader(usuariofr);
                    String tempUser = usuariosbr.readLine();
                    if (tempUser!=null){
                        usuarioCreador += tempUser.split("\\|")[0];
                    }else{
                        File bitacora = new File("C:\\MEIA\\bitacora_usuario.txt");
                        if (bitacora.exists()){
                            FileReader bitacorafr = new FileReader(bitacora);
                            BufferedReader bitacorabr = new BufferedReader(bitacorafr);
                            tempUser = bitacorabr.readLine();
                            if (tempUser!=null){
                            usuarioCreador += tempUser.split("\\|")[0];
                            }
                            bitacorabr.close();
                        }
                    }
                    usuariofr.close();
                    usuariosbr.close();
                }
                FileReader indexfr = new FileReader(index);
                BufferedReader indexbr = new BufferedReader(indexfr);
                String temp = indexbr.readLine();
                int registros = 0;
                while (temp!=null){
                    registros++;
                    temp = indexbr.readLine();
                }
                indexfr.close();
                indexbr.close();
                Date fdate = new Date();
                descibw.write("Nombre del Archivo:DonacionIndex.txt");
                descibw.newLine();
                descibw.write(usuarioCreador);
                descibw.newLine();
                descibw.write("Fecha creacion:" + fdate.getDay() + "/" + fdate.getMonth() + "/2019");
                descibw.newLine();
                descibw.write("Total registros:" + registros);
                descibw.newLine();
                descibw.write("Registros activos:" + registros);
                descibw.newLine();
                descibw.write("Registros inactivos:" + 0);
                descibw.newLine();
                descibw.close();
            } catch (IOException ex) {
                Logger.getLogger(IngresarDonacion.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
    
    public void busqueda(String usuario, String material, String fecha)
{
    String resultado = Buscar(usuario, material, fecha);
    if (resultado!=null){
        // guardar Resultado en variable global
        JOptionPane.showMessageDialog(null, "Donacion encontrada");
        Indice = resultado;
        Donacion don = new Donacion();
        don.setVisible(true);
    } else{
        JOptionPane.showMessageDialog(null, "No se ha encontrado ninguna donacion");
    }
}
    public void Eliminar()
    {
        String usuario = tfUsuario.getText();
        String material = cbMaterial.getSelectedItem().toString();
        String fecha = tfDia.getText() + "/" + cbMes.getText() + "/" + cbYear.getText();
        String direccion =  Buscar(usuario, material, fecha);
        if (direccion != null) {
            String bloque = direccion.split("\\.")[0];
            int linea = Integer.parseInt(direccion.split("\\.")[1]);
            String ruta = "C:\\MEIA\\Donaciones\\Donacion_" + bloque + ".txt";
            File f = new File(ruta);
            if (f.exists()){
                try {
                    FileReader fr = new FileReader(f);
                    BufferedReader br = new BufferedReader(fr);
                    String lectura = br.readLine();
                    ArrayList<String> lista = new ArrayList<>();
                    int contador = 1;
                    while (lectura!=null){
                        if (contador != linea){
                            lista.add(lectura);
                        }
                        contador++;
                        lectura = br.readLine();
                    }
                    fr.close();
                    br.close();
                    f.delete();
                    f.createNewFile();
                    FileWriter fw = new FileWriter(f);
                    BufferedWriter bw = new BufferedWriter(fw);
                    for(String x:lista){
                        bw.write(x);
                        bw.newLine();
                    }
                    bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Donacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        } else{
            //error donacion no encontrada para eliminar
        }
    }
    
    public void EliminarDelindice()
    {
        String usuario = tfUsuario.getText();
        String material = cbMaterial.getSelectedItem().toString();
        String fecha = tfDia.getText() + "/" + cbMes.getText() + "/" + cbYear.getText();
        String direccion =  Buscar(usuario, material, fecha);
        int linea = Integer.parseInt(direccion.split("\\.")[1]);
        String ruta = "C:\\MEIA\\Donaciones\\DonacionIndex.txt";
        File f = new File(ruta);
        if (f.exists()){
            try {
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            String lectura = br.readLine();
            ArrayList<String> lista = new ArrayList<>();
            while (lectura!=null){
                if (!lectura.contains(direccion)){
                    lista.add(lectura);
                }
                lectura = br.readLine();
            }
            fr.close();
            br.close();
            f.delete();
            f.createNewFile();
            FileWriter fw = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(fw);
            for(String x:lista){
                bw.write(x);
                bw.newLine();
            }
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Donacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncontrarDonacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncontrarDonacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncontrarDonacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncontrarDonacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncontrarDonacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbMaterial;
    private javax.swing.JTextField cbMes;
    private javax.swing.JTextField cbYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tfDia;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
